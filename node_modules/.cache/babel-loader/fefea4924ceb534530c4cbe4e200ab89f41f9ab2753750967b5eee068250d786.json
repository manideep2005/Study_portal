{"ast":null,"code":"var _jsxFileName = \"/Users/manideepgonugunta/Desktop/study-portal/src/Components/Videocall.js\",\n  _s = $RefreshSig$();\n// VideoCall.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport './Videocall.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction VideoCall() {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const {\n    contactId\n  } = useParams();\n  const location = useLocation();\n  const contact = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.contact;\n  const [user, setUser] = useState(null);\n  const [isConnecting, setIsConnecting] = useState(true);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isVideoOff, setIsVideoOff] = useState(false);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const [callTime, setCallTime] = useState(0);\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const timerRef = useRef(null);\n  const originalStreamRef = useRef(null);\n  useEffect(() => {\n    // Check if user is logged in\n    const loggedInUser = localStorage.getItem('user');\n    if (loggedInUser) {\n      const foundUser = JSON.parse(loggedInUser);\n      setUser(foundUser);\n    } else {\n      // Redirect to login if not logged in\n      navigate('/signin');\n      return;\n    }\n\n    // Start timer for call duration\n    timerRef.current = setInterval(() => {\n      setCallTime(prev => prev + 1);\n    }, 1000);\n\n    // Initialize video call (demo)\n    initializeVideoCall();\n    return () => {\n      if (timerRef.current) clearInterval(timerRef.current);\n      // Clean up video streams\n      if (localVideoRef.current && localVideoRef.current.srcObject) {\n        localVideoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [navigate, contactId]);\n  const initializeVideoCall = async () => {\n    try {\n      // Get local video stream\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n\n      // Store original stream for later use\n      originalStreamRef.current = stream;\n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = stream;\n      }\n\n      // For demo purposes, create a fake remote stream after a delay\n      setTimeout(() => {\n        setIsConnecting(false);\n        // In a real app, this would come from WebRTC connection\n        if (remoteVideoRef.current) {\n          // In a real app, you'd use the remote peer's stream\n          // For this demo, we're using a static image\n          remoteVideoRef.current.poster = \"/api/placeholder/400/320\";\n        }\n      }, 2000);\n    } catch (error) {\n      console.error(\"Error accessing media devices:\", error);\n      alert(\"Unable to access camera or microphone. Please check permissions.\");\n      endCall();\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const toggleMute = () => {\n    if (localVideoRef.current && localVideoRef.current.srcObject) {\n      const audioTracks = localVideoRef.current.srcObject.getAudioTracks();\n      audioTracks.forEach(track => {\n        track.enabled = isMuted;\n      });\n    }\n    setIsMuted(!isMuted);\n  };\n  const toggleVideo = () => {\n    if (localVideoRef.current && localVideoRef.current.srcObject) {\n      const videoTracks = localVideoRef.current.srcObject.getVideoTracks();\n      videoTracks.forEach(track => {\n        track.enabled = isVideoOff;\n      });\n    }\n    setIsVideoOff(!isVideoOff);\n  };\n  const toggleScreenShare = async () => {\n    try {\n      if (!isScreenSharing) {\n        // Store the original stream if not already stored\n        if (!originalStreamRef.current && localVideoRef.current && localVideoRef.current.srcObject) {\n          originalStreamRef.current = localVideoRef.current.srcObject;\n        }\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true\n        });\n\n        // Replace with screen sharing stream\n        if (localVideoRef.current) {\n          localVideoRef.current.srcObject = screenStream;\n        }\n\n        // When screen sharing stops\n        screenStream.getVideoTracks()[0].onended = () => {\n          restoreOriginalStream();\n        };\n        setIsScreenSharing(true);\n      } else {\n        restoreOriginalStream();\n      }\n    } catch (error) {\n      console.error(\"Error sharing screen:\", error);\n      alert(\"Unable to share screen. Please check permissions.\");\n    }\n  };\n\n  // VideoCall.js (continued)\n\n  const restoreOriginalStream = () => {\n    if (originalStreamRef.current && localVideoRef.current) {\n      localVideoRef.current.srcObject = originalStreamRef.current;\n      setIsScreenSharing(false);\n    } else {\n      // If original stream is not available, reinitialize the video call\n      initializeVideoCall();\n      setIsScreenSharing(false);\n    }\n  };\n  const endCall = () => {\n    if (timerRef.current) clearInterval(timerRef.current);\n\n    // Stop all tracks\n    if (localVideoRef.current && localVideoRef.current.srcObject) {\n      localVideoRef.current.srcObject.getTracks().forEach(track => track.stop());\n    }\n\n    // Navigate back to chat\n    navigate('/chat');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-call-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"call-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"participant-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Call with \", (contact === null || contact === void 0 ? void 0 : contact.name) || 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"call-timer\",\n          children: formatTime(callTime)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"end-call-btn\",\n        onClick: endCall,\n        children: \"End Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: isConnecting ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connecting-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connecting-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Connecting to \", (contact === null || contact === void 0 ? void 0 : contact.name) || 'participant', \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"remote-video-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: remoteVideoRef,\n            className: \"remote-video\",\n            autoPlay: true,\n            playsInline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"remote-user-name\",\n            children: (contact === null || contact === void 0 ? void 0 : contact.name) || 'Remote User'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"local-video-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: localVideoRef,\n            className: \"local-video\",\n            autoPlay: true,\n            playsInline: true,\n            muted: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"local-user-name\",\n            children: \"You\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), isMuted && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"muted-indicator\",\n            children: \"\\uD83D\\uDD07\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 27\n          }, this), isVideoOff && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-off-indicator\",\n            children: \"\\uD83D\\uDEAB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"call-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `control-btn ${isMuted ? 'active' : ''}`,\n        onClick: toggleMute,\n        children: [isMuted ? '🔇' : '🔊', /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"control-label\",\n          children: isMuted ? 'Unmute' : 'Mute'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `control-btn ${isVideoOff ? 'active' : ''}`,\n        onClick: toggleVideo,\n        children: [isVideoOff ? '🚫' : '📹', /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"control-label\",\n          children: isVideoOff ? 'Start Video' : 'Stop Video'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `control-btn ${isScreenSharing ? 'active' : ''}`,\n        onClick: toggleScreenShare,\n        children: [isScreenSharing ? '🖥️' : '📤', /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"control-label\",\n          children: isScreenSharing ? 'Stop Sharing' : 'Share Screen'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-btn end-call\",\n        onClick: endCall,\n        children: [\"\\uD83D\\uDCDE\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"control-label\",\n          children: \"End Call\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoCall, \"Nill0By44Jbq0rNoAF1vEKrlwp8=\", false, function () {\n  return [useNavigate, useParams, useLocation];\n});\n_c = VideoCall;\nexport default Videocall;\nvar _c;\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useParams","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoCall","_s","_location$state","navigate","contactId","location","contact","state","user","setUser","isConnecting","setIsConnecting","isMuted","setIsMuted","isVideoOff","setIsVideoOff","isScreenSharing","setIsScreenSharing","callTime","setCallTime","localVideoRef","remoteVideoRef","timerRef","originalStreamRef","loggedInUser","localStorage","getItem","foundUser","JSON","parse","current","setInterval","prev","initializeVideoCall","clearInterval","srcObject","getTracks","forEach","track","stop","stream","navigator","mediaDevices","getUserMedia","video","audio","setTimeout","poster","error","console","alert","endCall","formatTime","seconds","mins","Math","floor","secs","toString","padStart","toggleMute","audioTracks","getAudioTracks","enabled","toggleVideo","videoTracks","getVideoTracks","toggleScreenShare","screenStream","getDisplayMedia","onended","restoreOriginalStream","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","autoPlay","playsInline","muted","_c","Videocall","$RefreshReg$"],"sources":["/Users/manideepgonugunta/Desktop/study-portal/src/Components/Videocall.js"],"sourcesContent":["\n\n// VideoCall.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport './Videocall.css';\n\nfunction VideoCall() {\n  const navigate = useNavigate();\n  const { contactId } = useParams();\n  const location = useLocation();\n  const contact = location.state?.contact;\n  const [user, setUser] = useState(null);\n  const [isConnecting, setIsConnecting] = useState(true);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isVideoOff, setIsVideoOff] = useState(false);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const [callTime, setCallTime] = useState(0);\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const timerRef = useRef(null);\n  const originalStreamRef = useRef(null);\n\n  useEffect(() => {\n    // Check if user is logged in\n    const loggedInUser = localStorage.getItem('user');\n    if (loggedInUser) {\n      const foundUser = JSON.parse(loggedInUser);\n      setUser(foundUser);\n    } else {\n      // Redirect to login if not logged in\n      navigate('/signin');\n      return;\n    }\n\n    // Start timer for call duration\n    timerRef.current = setInterval(() => {\n      setCallTime(prev => prev + 1);\n    }, 1000);\n\n    // Initialize video call (demo)\n    initializeVideoCall();\n\n    return () => {\n      if (timerRef.current) clearInterval(timerRef.current);\n      // Clean up video streams\n      if (localVideoRef.current && localVideoRef.current.srcObject) {\n        localVideoRef.current.srcObject.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [navigate, contactId]);\n\n  const initializeVideoCall = async () => {\n    try {\n      // Get local video stream\n      const stream = await navigator.mediaDevices.getUserMedia({ \n        video: true, \n        audio: true \n      });\n      \n      // Store original stream for later use\n      originalStreamRef.current = stream;\n      \n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = stream;\n      }\n\n      // For demo purposes, create a fake remote stream after a delay\n      setTimeout(() => {\n        setIsConnecting(false);\n        // In a real app, this would come from WebRTC connection\n        if (remoteVideoRef.current) {\n          // In a real app, you'd use the remote peer's stream\n          // For this demo, we're using a static image\n          remoteVideoRef.current.poster = \"/api/placeholder/400/320\";\n        }\n      }, 2000);\n\n    } catch (error) {\n      console.error(\"Error accessing media devices:\", error);\n      alert(\"Unable to access camera or microphone. Please check permissions.\");\n      endCall();\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const toggleMute = () => {\n    if (localVideoRef.current && localVideoRef.current.srcObject) {\n      const audioTracks = localVideoRef.current.srcObject.getAudioTracks();\n      audioTracks.forEach(track => {\n        track.enabled = isMuted;\n      });\n    }\n    setIsMuted(!isMuted);\n  };\n\n  const toggleVideo = () => {\n    if (localVideoRef.current && localVideoRef.current.srcObject) {\n      const videoTracks = localVideoRef.current.srcObject.getVideoTracks();\n      videoTracks.forEach(track => {\n        track.enabled = isVideoOff;\n      });\n    }\n    setIsVideoOff(!isVideoOff);\n  };\n\n  const toggleScreenShare = async () => {\n    try {\n      if (!isScreenSharing) {\n        // Store the original stream if not already stored\n        if (!originalStreamRef.current && localVideoRef.current && localVideoRef.current.srcObject) {\n          originalStreamRef.current = localVideoRef.current.srcObject;\n        }\n        \n        const screenStream = await navigator.mediaDevices.getDisplayMedia({ \n          video: true\n        });\n        \n        // Replace with screen sharing stream\n        if (localVideoRef.current) {\n          localVideoRef.current.srcObject = screenStream;\n        }\n        \n        // When screen sharing stops\n        screenStream.getVideoTracks()[0].onended = () => {\n          restoreOriginalStream();\n        };\n        \n        setIsScreenSharing(true);\n      } else {\n        restoreOriginalStream();\n      }\n    } catch (error) {\n      console.error(\"Error sharing screen:\", error);\n      alert(\"Unable to share screen. Please check permissions.\");\n    }\n  };\n  \n// VideoCall.js (continued)\n\nconst restoreOriginalStream = () => {\n    if (originalStreamRef.current && localVideoRef.current) {\n      localVideoRef.current.srcObject = originalStreamRef.current;\n      setIsScreenSharing(false);\n    } else {\n      // If original stream is not available, reinitialize the video call\n      initializeVideoCall();\n      setIsScreenSharing(false);\n    }\n  };\n\n  const endCall = () => {\n    if (timerRef.current) clearInterval(timerRef.current);\n    \n    // Stop all tracks\n    if (localVideoRef.current && localVideoRef.current.srcObject) {\n      localVideoRef.current.srcObject.getTracks().forEach(track => track.stop());\n    }\n    \n    // Navigate back to chat\n    navigate('/chat');\n  };\n\n  return (\n    <div className=\"video-call-container\">\n      <div className=\"call-header\">\n        <div className=\"participant-info\">\n          <h2>Call with {contact?.name || 'Unknown'}</h2>\n          <div className=\"call-timer\">{formatTime(callTime)}</div>\n        </div>\n        <button className=\"end-call-btn\" onClick={endCall}>End Call</button>\n      </div>\n      \n      <div className=\"video-grid\">\n        {isConnecting ? (\n          <div className=\"connecting-status\">\n            <div className=\"connecting-spinner\"></div>\n            <p>Connecting to {contact?.name || 'participant'}...</p>\n          </div>\n        ) : (\n          <>\n            <div className=\"remote-video-container\">\n              <video \n                ref={remoteVideoRef}\n                className=\"remote-video\"\n                autoPlay\n                playsInline\n              />\n              <div className=\"remote-user-name\">{contact?.name || 'Remote User'}</div>\n            </div>\n                \n            <div className=\"local-video-container\">\n              <video \n                ref={localVideoRef}\n                className=\"local-video\"\n                autoPlay\n                playsInline\n                muted\n              />\n              <div className=\"local-user-name\">You</div>\n              {isMuted && <div className=\"muted-indicator\">🔇</div>}\n              {isVideoOff && <div className=\"video-off-indicator\">🚫</div>}\n            </div>\n          </>\n        )}\n      </div>\n      \n      <div className=\"call-controls\">\n        <button \n          className={`control-btn ${isMuted ? 'active' : ''}`} \n          onClick={toggleMute}\n        >\n          {isMuted ? '🔇' : '🔊'}\n          <span className=\"control-label\">{isMuted ? 'Unmute' : 'Mute'}</span>\n        </button>\n        <button \n          className={`control-btn ${isVideoOff ? 'active' : ''}`} \n          onClick={toggleVideo}\n        >\n          {isVideoOff ? '🚫' : '📹'}\n          <span className=\"control-label\">{isVideoOff ? 'Start Video' : 'Stop Video'}</span>\n        </button>\n        <button \n          className={`control-btn ${isScreenSharing ? 'active' : ''}`} \n          onClick={toggleScreenShare}\n        >\n          {isScreenSharing ? '🖥️' : '📤'}\n          <span className=\"control-label\">{isScreenSharing ? 'Stop Sharing' : 'Share Screen'}</span>\n        </button>\n        <button className=\"control-btn end-call\" onClick={endCall}>\n          📞\n          <span className=\"control-label\">End Call</span>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Videocall;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}