{"ast":null,"code":"var _jsxFileName = \"/Users/manideepgonugunta/Desktop/study-portal/src/Components/Videocall.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport { Peer } from \"peerjs\";\nimport \"./VideoCall.css\"; // You'll need to create this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoCall() {\n  _s();\n  var _location$state;\n  const {\n    contactId\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const contact = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.contact;\n  const [peerId, setPeerId] = useState(\"\");\n  const [remotePeerId, setRemotePeerId] = useState(\"\");\n  const [isConnected, setIsConnected] = useState(false);\n  const [isCallStarted, setIsCallStarted] = useState(false);\n  const [error, setError] = useState(null);\n  const [localStream, setLocalStream] = useState(null);\n  const peerInstance = useRef(null);\n  const myVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n\n  // Initialize PeerJS when component mounts\n  useEffect(() => {\n    const initializePeer = async () => {\n      try {\n        // Create a new Peer instance with explicit configuration\n        const peer = new Peer(undefined, {\n          host: 'localhost',\n          port: 9000,\n          path: '/peerjs',\n          debug: 3,\n          // Set to 3 for all logs, helpful for debugging\n          config: {\n            'iceServers': [{\n              urls: 'stun:stun.l.google.com:19302'\n            }, {\n              urls: 'stun:global.stun.twilio.com:3478'\n            }]\n          }\n        });\n\n        // Handle peer open event\n        peer.on(\"open\", id => {\n          var _JSON$parse;\n          console.log(\"My peer ID is: \" + id);\n          setPeerId(id);\n\n          // Generate a room ID based on the contact and user\n          const userId = ((_JSON$parse = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.id) || 'user';\n          const roomId = `${userId}-${contactId}`;\n          console.log(\"Room ID:\", roomId);\n\n          // Here you would typically emit a socket event to join a room\n          // socket.emit('join-room', roomId, id);\n        });\n\n        // Handle incoming calls\n        peer.on(\"call\", async call => {\n          try {\n            console.log(\"Received call from:\", call.peer);\n            if (!localStream) {\n              const stream = await navigator.mediaDevices.getUserMedia({\n                video: true,\n                audio: true\n              });\n              setLocalStream(stream);\n              myVideoRef.current.srcObject = stream;\n\n              // Answer the call with our stream\n              call.answer(stream);\n              setIsCallStarted(true);\n\n              // Handle incoming stream\n              call.on(\"stream\", remoteStream => {\n                console.log(\"Received remote stream\");\n                remoteVideoRef.current.srcObject = remoteStream;\n                setIsConnected(true);\n              });\n            } else {\n              call.answer(localStream);\n            }\n          } catch (err) {\n            console.error(\"Failed to get local stream\", err);\n            setError(\"Failed to access camera and microphone: \" + err.message);\n          }\n        });\n\n        // Handle peer errors\n        peer.on('error', err => {\n          console.error('Peer connection error:', err);\n          setError(\"Connection error: \" + err.message);\n        });\n\n        // Save peer instance\n        peerInstance.current = peer;\n\n        // Initialize camera/mic access\n        initializeMedia();\n\n        // Clean up on unmount\n        return () => {\n          peer.destroy();\n          if (localStream) {\n            localStream.getTracks().forEach(track => track.stop());\n          }\n        };\n      } catch (err) {\n        console.error(\"Failed to create peer\", err);\n        setError(\"Failed to initialize video call: \" + err.message);\n      }\n    };\n    initializePeer();\n  }, [contactId]);\n\n  // Initialize media stream\n  const initializeMedia = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      setLocalStream(stream);\n      if (myVideoRef.current) {\n        myVideoRef.current.srcObject = stream;\n      }\n    } catch (err) {\n      console.error(\"Failed to get local stream\", err);\n      setError(\"Failed to access camera and microphone: \" + err.message);\n    }\n  };\n\n  // Call the remote peer\n  const callUser = async () => {\n    try {\n      if (!peerInstance.current) {\n        setError(\"Peer connection not established\");\n        return;\n      }\n      if (!remotePeerId) {\n        setError(\"Please enter a valid peer ID\");\n        return;\n      }\n      console.log(\"Calling peer:\", remotePeerId);\n      if (!localStream) {\n        await initializeMedia();\n      }\n      const call = peerInstance.current.call(remotePeerId, localStream);\n      setIsCallStarted(true);\n      call.on(\"stream\", remoteStream => {\n        console.log(\"Received remote stream\");\n        remoteVideoRef.current.srcObject = remoteStream;\n        setIsConnected(true);\n      });\n      call.on('error', err => {\n        console.error('Call error:', err);\n        setError(\"Call failed: \" + err.message);\n      });\n      call.on('close', () => {\n        console.log('Call closed');\n        setIsConnected(false);\n        setIsCallStarted(false);\n      });\n    } catch (err) {\n      console.error(\"Failed to make call\", err);\n      setError(\"Failed to make call: \" + err.message);\n    }\n  };\n\n  // End call and return to chat\n  const endCall = () => {\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n    }\n    navigate(`/chat`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-call-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-call-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Video Call \", contact ? `with ${contact.name}` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status\",\n        children: isConnected ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-connected\",\n          children: \"Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this) : isCallStarted ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-connecting\",\n          children: \"Connecting...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-disconnected\",\n          children: \"Not Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container local-video\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: myVideoRef,\n          autoPlay: true,\n          playsInline: true,\n          muted: true,\n          className: \"my-video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-label\",\n          children: \"You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container remote-video\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: remoteVideoRef,\n          autoPlay: true,\n          playsInline: true,\n          className: \"remote-video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-label\",\n          children: contact ? contact.name : 'Remote User'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-controls\",\n      children: !isCallStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"peer-id-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Your ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"peer-id\",\n              children: peerId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"copy-id-btn\",\n            onClick: () => {\n              navigator.clipboard.writeText(peerId);\n              alert(\"Peer ID copied to clipboard!\");\n            },\n            children: \"Copy ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"call-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter peer ID to call\",\n            value: remotePeerId,\n            onChange: e => setRemotePeerId(e.target.value),\n            className: \"peer-id-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: callUser,\n            className: \"call-btn\",\n            disabled: !peerId || !remotePeerId,\n            children: \"Start Call\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"active-call-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"end-call-btn\",\n          onClick: endCall,\n          children: \"End Call\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back-to-chat\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: endCall,\n        children: \"Return to Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoCall, \"zCs4KeJWHg17Avr8FkB6htxZmws=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c = VideoCall;\nexport default VideoCall;\nvar _c;\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useParams","useNavigate","useLocation","Peer","jsxDEV","_jsxDEV","VideoCall","_s","_location$state","contactId","navigate","location","contact","state","peerId","setPeerId","remotePeerId","setRemotePeerId","isConnected","setIsConnected","isCallStarted","setIsCallStarted","error","setError","localStream","setLocalStream","peerInstance","myVideoRef","remoteVideoRef","initializePeer","peer","undefined","host","port","path","debug","config","urls","on","id","_JSON$parse","console","log","userId","JSON","parse","localStorage","getItem","roomId","call","stream","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","answer","remoteStream","err","message","initializeMedia","destroy","getTracks","forEach","track","stop","callUser","endCall","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","muted","onClick","clipboard","writeText","alert","type","placeholder","value","onChange","e","target","disabled","_c","$RefreshReg$"],"sources":["/Users/manideepgonugunta/Desktop/study-portal/src/Components/Videocall.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport { Peer } from \"peerjs\";\nimport \"./VideoCall.css\"; // You'll need to create this CSS file\n\nfunction VideoCall() {\n  const { contactId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const contact = location.state?.contact;\n  \n  const [peerId, setPeerId] = useState(\"\");\n  const [remotePeerId, setRemotePeerId] = useState(\"\");\n  const [isConnected, setIsConnected] = useState(false);\n  const [isCallStarted, setIsCallStarted] = useState(false);\n  const [error, setError] = useState(null);\n  const [localStream, setLocalStream] = useState(null);\n  \n  const peerInstance = useRef(null);\n  const myVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n\n  // Initialize PeerJS when component mounts\n  useEffect(() => {\n    const initializePeer = async () => {\n      try {\n        // Create a new Peer instance with explicit configuration\n        const peer = new Peer(undefined, {\n          host: 'localhost',\n          port: 9000,\n          path: '/peerjs',\n          debug: 3, // Set to 3 for all logs, helpful for debugging\n          config: {\n            'iceServers': [\n              { urls: 'stun:stun.l.google.com:19302' },\n              { urls: 'stun:global.stun.twilio.com:3478' }\n            ]\n          }\n        });\n\n        // Handle peer open event\n        peer.on(\"open\", (id) => {\n          console.log(\"My peer ID is: \" + id);\n          setPeerId(id);\n          \n          // Generate a room ID based on the contact and user\n          const userId = JSON.parse(localStorage.getItem('user'))?.id || 'user';\n          const roomId = `${userId}-${contactId}`;\n          console.log(\"Room ID:\", roomId);\n          \n          // Here you would typically emit a socket event to join a room\n          // socket.emit('join-room', roomId, id);\n        });\n\n        // Handle incoming calls\n        peer.on(\"call\", async (call) => {\n          try {\n            console.log(\"Received call from:\", call.peer);\n            \n            if (!localStream) {\n              const stream = await navigator.mediaDevices.getUserMedia({ \n                video: true, \n                audio: true \n              });\n              \n              setLocalStream(stream);\n              myVideoRef.current.srcObject = stream;\n              \n              // Answer the call with our stream\n              call.answer(stream);\n              setIsCallStarted(true);\n              \n              // Handle incoming stream\n              call.on(\"stream\", (remoteStream) => {\n                console.log(\"Received remote stream\");\n                remoteVideoRef.current.srcObject = remoteStream;\n                setIsConnected(true);\n              });\n            } else {\n              call.answer(localStream);\n            }\n          } catch (err) {\n            console.error(\"Failed to get local stream\", err);\n            setError(\"Failed to access camera and microphone: \" + err.message);\n          }\n        });\n\n        // Handle peer errors\n        peer.on('error', (err) => {\n          console.error('Peer connection error:', err);\n          setError(\"Connection error: \" + err.message);\n        });\n\n        // Save peer instance\n        peerInstance.current = peer;\n        \n        // Initialize camera/mic access\n        initializeMedia();\n        \n        // Clean up on unmount\n        return () => {\n          peer.destroy();\n          if (localStream) {\n            localStream.getTracks().forEach(track => track.stop());\n          }\n        };\n      } catch (err) {\n        console.error(\"Failed to create peer\", err);\n        setError(\"Failed to initialize video call: \" + err.message);\n      }\n    };\n    \n    initializePeer();\n  }, [contactId]);\n\n  // Initialize media stream\n  const initializeMedia = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ \n        video: true, \n        audio: true \n      });\n      \n      setLocalStream(stream);\n      if (myVideoRef.current) {\n        myVideoRef.current.srcObject = stream;\n      }\n    } catch (err) {\n      console.error(\"Failed to get local stream\", err);\n      setError(\"Failed to access camera and microphone: \" + err.message);\n    }\n  };\n\n  // Call the remote peer\n  const callUser = async () => {\n    try {\n      if (!peerInstance.current) {\n        setError(\"Peer connection not established\");\n        return;\n      }\n      \n      if (!remotePeerId) {\n        setError(\"Please enter a valid peer ID\");\n        return;\n      }\n      \n      console.log(\"Calling peer:\", remotePeerId);\n      \n      if (!localStream) {\n        await initializeMedia();\n      }\n      \n      const call = peerInstance.current.call(remotePeerId, localStream);\n      setIsCallStarted(true);\n      \n      call.on(\"stream\", (remoteStream) => {\n        console.log(\"Received remote stream\");\n        remoteVideoRef.current.srcObject = remoteStream;\n        setIsConnected(true);\n      });\n      \n      call.on('error', (err) => {\n        console.error('Call error:', err);\n        setError(\"Call failed: \" + err.message);\n      });\n      \n      call.on('close', () => {\n        console.log('Call closed');\n        setIsConnected(false);\n        setIsCallStarted(false);\n      });\n    } catch (err) {\n      console.error(\"Failed to make call\", err);\n      setError(\"Failed to make call: \" + err.message);\n    }\n  };\n\n  // End call and return to chat\n  const endCall = () => {\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n    }\n    navigate(`/chat`);\n  };\n\n  return (\n    <div className=\"video-call-container\">\n      <div className=\"video-call-header\">\n        <h2>Video Call {contact ? `with ${contact.name}` : ''}</h2>\n        <div className=\"connection-status\">\n          {isConnected ? \n            <span className=\"status-connected\">Connected</span> : \n            isCallStarted ? \n              <span className=\"status-connecting\">Connecting...</span> : \n              <span className=\"status-disconnected\">Not Connected</span>\n          }\n        </div>\n      </div>\n      \n      {error && (\n        <div className=\"error-message\">\n          <p>{error}</p>\n        </div>\n      )}\n      \n      <div className=\"video-grid\">\n        <div className=\"video-container local-video\">\n          <video \n            ref={myVideoRef} \n            autoPlay \n            playsInline \n            muted \n            className=\"my-video\"\n          />\n          <div className=\"video-label\">You</div>\n        </div>\n        \n        <div className=\"video-container remote-video\">\n          <video \n            ref={remoteVideoRef} \n            autoPlay \n            playsInline \n            className=\"remote-video\"\n          />\n          <div className=\"video-label\">{contact ? contact.name : 'Remote User'}</div>\n        </div>\n      </div>\n      \n      <div className=\"video-controls\">\n        {!isCallStarted ? (\n          <div className=\"connection-controls\">\n            <div className=\"peer-id-container\">\n              <p>Your ID: <span className=\"peer-id\">{peerId}</span></p>\n              <button \n                className=\"copy-id-btn\"\n                onClick={() => {\n                  navigator.clipboard.writeText(peerId);\n                  alert(\"Peer ID copied to clipboard!\");\n                }}\n              >\n                Copy ID\n              </button>\n            </div>\n            \n            <div className=\"call-form\">\n              <input\n                type=\"text\"\n                placeholder=\"Enter peer ID to call\"\n                value={remotePeerId}\n                onChange={(e) => setRemotePeerId(e.target.value)}\n                className=\"peer-id-input\"\n              />\n              <button \n                onClick={callUser}\n                className=\"call-btn\"\n                disabled={!peerId || !remotePeerId}\n              >\n                Start Call\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div className=\"active-call-controls\">\n            <button className=\"end-call-btn\" onClick={endCall}>\n              End Call\n            </button>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"back-to-chat\">\n        <button onClick={endCall}>\n          Return to Chat\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default VideoCall;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}