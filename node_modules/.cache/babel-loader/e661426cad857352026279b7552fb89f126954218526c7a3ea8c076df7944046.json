{"ast":null,"code":"var _jsxFileName = \"/Users/manideepgonugunta/Desktop/study-portal/src/Components/Chat.js\",\n  _s = $RefreshSig$();\n// Chat.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [contacts, setContacts] = useState([]);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const messagesEndRef = useRef(null);\n\n  // Sample data for contacts and messages\n  const sampleContacts = [{\n    id: 1,\n    name: 'Dr. Smith',\n    role: 'Professor',\n    avatar: 'S',\n    status: 'online',\n    unread: 2\n  }, {\n    id: 2,\n    name: 'Jenny Williams',\n    role: 'Student',\n    avatar: 'J',\n    status: 'online',\n    unread: 0\n  }, {\n    id: 3,\n    name: 'Prof. Johnson',\n    role: 'Professor',\n    avatar: 'P',\n    status: 'offline',\n    unread: 0\n  }, {\n    id: 4,\n    name: 'Mike Chen',\n    role: 'Student',\n    avatar: 'M',\n    status: 'online',\n    unread: 5\n  }, {\n    id: 5,\n    name: 'Sarah Davis',\n    role: 'Teaching Assistant',\n    avatar: 'S',\n    status: 'away',\n    unread: 0\n  }];\n  const sampleMessages = {\n    1: [{\n      id: 1,\n      senderId: 1,\n      text: 'Hello, how are your math assignments coming along?',\n      timestamp: '2023-04-05T10:30:00'\n    }, {\n      id: 2,\n      senderId: 'me',\n      text: 'Hi Dr. Smith! I\\'ve completed the first part, but I have a question about the calculus problem.',\n      timestamp: '2023-04-05T10:32:00'\n    }, {\n      id: 3,\n      senderId: 1,\n      text: 'Sure, what\\'s your question?',\n      timestamp: '2023-04-05T10:33:00'\n    }, {\n      id: 4,\n      senderId: 'me',\n      text: 'In problem 3, I\\'m not sure if I should use the chain rule or product rule first.',\n      timestamp: '2023-04-05T10:35:00'\n    }, {\n      id: 5,\n      senderId: 1,\n      text: 'Good question. For that particular problem, start with the product rule, then apply the chain rule to the second term.',\n      timestamp: '2023-04-05T10:38:00'\n    }],\n    2: [{\n      id: 1,\n      senderId: 2,\n      text: 'Hey! Are you coming to the study group tonight?',\n      timestamp: '2023-04-04T18:20:00'\n    }, {\n      id: 2,\n      senderId: 'me',\n      text: 'Yes, I\\'ll be there. What time are we meeting?',\n      timestamp: '2023-04-04T18:22:00'\n    }, {\n      id: 3,\n      senderId: 2,\n      text: '7 PM at the library, usual spot!',\n      timestamp: '2023-04-04T18:23:00'\n    }],\n    4: [{\n      id: 1,\n      senderId: 4,\n      text: 'Did you get the notes from yesterday\\'s class?',\n      timestamp: '2023-04-01T09:15:00'\n    }, {\n      id: 2,\n      senderId: 'me',\n      text: 'Yes, I did. Do you need them?',\n      timestamp: '2023-04-01T09:20:00'\n    }, {\n      id: 3,\n      senderId: 4,\n      text: 'That would be great! Can you share them?',\n      timestamp: '2023-04-01T09:21:00'\n    }, {\n      id: 4,\n      senderId: 'me',\n      text: 'Sure, I\\'ll send them after class today.',\n      timestamp: '2023-04-01T09:25:00'\n    }, {\n      id: 5,\n      senderId: 4,\n      text: 'Thanks! I appreciate it.',\n      timestamp: '2023-04-01T09:26:00'\n    }]\n  };\n  useEffect(() => {\n    // Check if user is logged in\n    const loggedInUser = localStorage.getItem('user');\n    if (loggedInUser) {\n      const foundUser = JSON.parse(loggedInUser);\n      setUser(foundUser);\n    } else {\n      // Redirect to login if not logged in\n      navigate('/signin');\n    }\n\n    // Simulate loading data\n    setTimeout(() => {\n      setContacts(sampleContacts);\n      setIsLoading(false);\n    }, 800);\n  }, [navigate]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    // Scroll to bottom of messages\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleContactSelect = contact => {\n    setSelectedContact(contact);\n    // Load messages for this contact\n    setMessages(sampleMessages[contact.id] || []);\n\n    // Update contacts to mark messages as read\n    setContacts(contacts.map(c => c.id === contact.id ? {\n      ...c,\n      unread: 0\n    } : c));\n  };\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !selectedContact) return;\n\n    // Add new message to the conversation\n    const newMsg = {\n      id: messages.length + 1,\n      senderId: 'me',\n      text: newMessage,\n      timestamp: new Date().toISOString()\n    };\n    setMessages([...messages, newMsg]);\n    setNewMessage('');\n\n    // Simulate response (only for demo purposes)\n    if (selectedContact.id === 1) {\n      setTimeout(() => {\n        const response = {\n          id: messages.length + 2,\n          senderId: selectedContact.id,\n          text: 'I see. Let me know if you have any other questions!',\n          timestamp: new Date().toISOString()\n        };\n        setMessages(prevMessages => [...prevMessages, response]);\n      }, 3000);\n    }\n  };\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const navigateToDashboard = () => {\n    navigate('/dashboard');\n  };\n  const startVideoCall = () => {\n    if (selectedContact) {\n      navigate(`/video-call/${selectedContact.id}`, {\n        state: {\n          contact: selectedContact\n        }\n      });\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading chat...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-to-dashboard\",\n          onClick: navigateToDashboard,\n          children: \"Back to Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contacts-search\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search contacts...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contacts-list\",\n        children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `contact-item ${(selectedContact === null || selectedContact === void 0 ? void 0 : selectedContact.id) === contact.id ? 'active' : ''}`,\n          onClick: () => handleContactSelect(contact),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-avatar\",\n            children: [contact.avatar, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status-indicator ${contact.status}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: contact.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: contact.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), contact.unread > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"unread-badge\",\n            children: contact.unread\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this)]\n        }, contact.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-main\",\n      children: selectedContact ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-contact-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contact-avatar\",\n              children: [selectedContact.avatar, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `status-indicator ${selectedContact.status}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: selectedContact.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: selectedContact.status === 'online' ? 'Online' : selectedContact.status === 'away' ? 'Away' : 'Offline'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"video-call-btn\",\n              onClick: startVideoCall,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"icon\",\n                children: \"\\uD83D\\uDCF9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this), \" Video Call\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.senderId === 'me' ? 'outgoing' : 'incoming'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: formatTime(message.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this)\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"message-input\",\n          onSubmit: handleSendMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type a message...\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-contact-selected\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placeholder-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"placeholder-icon\",\n            children: \"\\uD83D\\uDCAC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Select a contact to start chatting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose from your contacts list on the left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"y2wknK2H5aU0/Nb/kQQ1x1JETho=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","navigate","user","setUser","isLoading","setIsLoading","contacts","setContacts","selectedContact","setSelectedContact","messages","setMessages","newMessage","setNewMessage","messagesEndRef","sampleContacts","id","name","role","avatar","status","unread","sampleMessages","senderId","text","timestamp","loggedInUser","localStorage","getItem","foundUser","JSON","parse","setTimeout","_messagesEndRef$curre","current","scrollIntoView","behavior","handleContactSelect","contact","map","c","handleSendMessage","e","preventDefault","trim","newMsg","length","Date","toISOString","response","prevMessages","formatTime","date","toLocaleTimeString","hour","minute","navigateToDashboard","startVideoCall","state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","message","ref","onSubmit","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/manideepgonugunta/Desktop/study-portal/src/Components/Chat.js"],"sourcesContent":["// Chat.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Chat.css';\n\nfunction Chat() {\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [contacts, setContacts] = useState([]);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const messagesEndRef = useRef(null);\n\n  // Sample data for contacts and messages\n  const sampleContacts = [\n    { id: 1, name: 'Dr. Smith', role: 'Professor', avatar: 'S', status: 'online', unread: 2 },\n    { id: 2, name: 'Jenny Williams', role: 'Student', avatar: 'J', status: 'online', unread: 0 },\n    { id: 3, name: 'Prof. Johnson', role: 'Professor', avatar: 'P', status: 'offline', unread: 0 },\n    { id: 4, name: 'Mike Chen', role: 'Student', avatar: 'M', status: 'online', unread: 5 },\n    { id: 5, name: 'Sarah Davis', role: 'Teaching Assistant', avatar: 'S', status: 'away', unread: 0 },\n  ];\n\n  const sampleMessages = {\n    1: [\n      { id: 1, senderId: 1, text: 'Hello, how are your math assignments coming along?', timestamp: '2023-04-05T10:30:00' },\n      { id: 2, senderId: 'me', text: 'Hi Dr. Smith! I\\'ve completed the first part, but I have a question about the calculus problem.', timestamp: '2023-04-05T10:32:00' },\n      { id: 3, senderId: 1, text: 'Sure, what\\'s your question?', timestamp: '2023-04-05T10:33:00' },\n      { id: 4, senderId: 'me', text: 'In problem 3, I\\'m not sure if I should use the chain rule or product rule first.', timestamp: '2023-04-05T10:35:00' },\n      { id: 5, senderId: 1, text: 'Good question. For that particular problem, start with the product rule, then apply the chain rule to the second term.', timestamp: '2023-04-05T10:38:00' },\n    ],\n    2: [\n      { id: 1, senderId: 2, text: 'Hey! Are you coming to the study group tonight?', timestamp: '2023-04-04T18:20:00' },\n      { id: 2, senderId: 'me', text: 'Yes, I\\'ll be there. What time are we meeting?', timestamp: '2023-04-04T18:22:00' },\n      { id: 3, senderId: 2, text: '7 PM at the library, usual spot!', timestamp: '2023-04-04T18:23:00' },\n    ],\n    4: [\n      { id: 1, senderId: 4, text: 'Did you get the notes from yesterday\\'s class?', timestamp: '2023-04-01T09:15:00' },\n      { id: 2, senderId: 'me', text: 'Yes, I did. Do you need them?', timestamp: '2023-04-01T09:20:00' },\n      { id: 3, senderId: 4, text: 'That would be great! Can you share them?', timestamp: '2023-04-01T09:21:00' },\n      { id: 4, senderId: 'me', text: 'Sure, I\\'ll send them after class today.', timestamp: '2023-04-01T09:25:00' },\n      { id: 5, senderId: 4, text: 'Thanks! I appreciate it.', timestamp: '2023-04-01T09:26:00' },\n    ]\n  };\n\n  useEffect(() => {\n    // Check if user is logged in\n    const loggedInUser = localStorage.getItem('user');\n    if (loggedInUser) {\n      const foundUser = JSON.parse(loggedInUser);\n      setUser(foundUser);\n    } else {\n      // Redirect to login if not logged in\n      navigate('/signin');\n    }\n    \n    // Simulate loading data\n    setTimeout(() => {\n      setContacts(sampleContacts);\n      setIsLoading(false);\n    }, 800);\n  }, [navigate]);\n\n  useEffect(() => {\n    // Scroll to bottom of messages\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const handleContactSelect = (contact) => {\n    setSelectedContact(contact);\n    // Load messages for this contact\n    setMessages(sampleMessages[contact.id] || []);\n    \n    // Update contacts to mark messages as read\n    setContacts(contacts.map(c => \n      c.id === contact.id ? {...c, unread: 0} : c\n    ));\n  };\n\n  const handleSendMessage = (e) => {\n    e.preventDefault();\n    if (!newMessage.trim() || !selectedContact) return;\n    \n    // Add new message to the conversation\n    const newMsg = {\n      id: messages.length + 1,\n      senderId: 'me',\n      text: newMessage,\n      timestamp: new Date().toISOString(),\n    };\n    \n    setMessages([...messages, newMsg]);\n    setNewMessage('');\n    \n    // Simulate response (only for demo purposes)\n    if (selectedContact.id === 1) {\n      setTimeout(() => {\n        const response = {\n          id: messages.length + 2,\n          senderId: selectedContact.id,\n          text: 'I see. Let me know if you have any other questions!',\n          timestamp: new Date().toISOString(),\n        };\n        setMessages(prevMessages => [...prevMessages, response]);\n      }, 3000);\n    }\n  };\n\n  const formatTime = (timestamp) => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  const navigateToDashboard = () => {\n    navigate('/dashboard');\n  };\n\n  const startVideoCall = () => {\n    if (selectedContact) {\n      navigate(`/video-call/${selectedContact.id}`, { state: { contact: selectedContact } });\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading chat...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-sidebar\">\n        <div className=\"sidebar-header\">\n          <h2>Messages</h2>\n          <button className=\"back-to-dashboard\" onClick={navigateToDashboard}>\n            Back to Dashboard\n          </button>\n        </div>\n        <div className=\"contacts-search\">\n          <input type=\"text\" placeholder=\"Search contacts...\" />\n        </div>\n        <div className=\"contacts-list\">\n          {contacts.map(contact => (\n            <div \n              key={contact.id} \n              className={`contact-item ${selectedContact?.id === contact.id ? 'active' : ''}`}\n              onClick={() => handleContactSelect(contact)}\n            >\n              <div className=\"contact-avatar\">\n                {contact.avatar}\n                <span className={`status-indicator ${contact.status}`}></span>\n              </div>\n              <div className=\"contact-info\">\n                <h3>{contact.name}</h3>\n                <p>{contact.role}</p>\n              </div>\n              {contact.unread > 0 && (\n                <div className=\"unread-badge\">{contact.unread}</div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      <div className=\"chat-main\">\n        {selectedContact ? (\n          <>\n            <div className=\"chat-header\">\n              <div className=\"chat-contact-info\">\n                <div className=\"contact-avatar\">\n                  {selectedContact.avatar}\n                  <span className={`status-indicator ${selectedContact.status}`}></span>\n                </div>\n                <div>\n                  <h3>{selectedContact.name}</h3>\n                  <p>{selectedContact.status === 'online' ? 'Online' : selectedContact.status === 'away' ? 'Away' : 'Offline'}</p>\n                </div>\n              </div>\n              <div className=\"chat-actions\">\n                <button className=\"video-call-btn\" onClick={startVideoCall}>\n                  <span className=\"icon\">📹</span> Video Call\n                </button>\n              </div>\n            </div>\n            \n            <div className=\"messages-container\">\n              {messages.map(message => (\n                <div \n                  key={message.id} \n                  className={`message ${message.senderId === 'me' ? 'outgoing' : 'incoming'}`}\n                >\n                  <div className=\"message-content\">\n                    <p>{message.text}</p>\n                    <span className=\"message-time\">{formatTime(message.timestamp)}</span>\n                  </div>\n                </div>\n              ))}\n              <div ref={messagesEndRef} />\n            </div>\n            \n            <form className=\"message-input\" onSubmit={handleSendMessage}>\n              <input \n                type=\"text\" \n                placeholder=\"Type a message...\" \n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n              />\n              <button type=\"submit\">Send</button>\n            </form>\n          </>\n        ) : (\n          <div className=\"no-contact-selected\">\n            <div className=\"placeholder-content\">\n              <div className=\"placeholder-icon\">💬</div>\n              <h3>Select a contact to start chatting</h3>\n              <p>Choose from your contacts list on the left</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}